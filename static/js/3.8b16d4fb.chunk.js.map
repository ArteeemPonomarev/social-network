{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatuswithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.jsx"],"names":["module","exports","ProfileStatuswithHooks","props","useEffect","setStatus","status","useState","isEditMode","setEditMode","onDoubleClick","autoFocus","value","onBlur","updateUserStatus","onChange","e","currentTarget","ProfileInfo","profile","className","s","Info","src","photos","small","Preloader","Post","item","alt","message","likesCounter","maxLength10","maxLengthCreator","AddNewPostRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","name","placeholder","buttons","MyPosts","React","memo","postsElement","profilePage","postsData","map","p","post","likes","myPostWrapp","posts","newPost","values","addPost","addNewPost","MyPostsContainer","connect","state","newPostText","dispatch","newPostMessage","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.8b16d4fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Info\":\"ProfileInfo_Info__1fVod\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__2Pm63\",\"myPostWrapp\":\"MyPosts_myPostWrapp__1e-R4\",\"posts\":\"MyPosts_posts__3Chbd\",\"newPost\":\"MyPosts_newPost__1L_Mf\",\"buttons\":\"MyPosts_buttons__3zSqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item___BRQJ\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatuswithHooks = (props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const [isEditMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!isEditMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n            </div>}\r\n            {isEditMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       value={status}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}/>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatuswithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatuswithHooks from \"./ProfileStatuswithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className =  {s.Info} >\r\n               <img src = {profile.photos.small} />\r\n                ava + discription(about myself)\r\n                <ProfileStatuswithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n         \r\n          <div className={s.item}>\r\n            <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' alt='ava' />\r\n            {props.message}\r\n            <div>\r\n              <span>like:{props.likesCounter}</span>\r\n            </div>\r\n          </div>      \r\n      );\r\n    }\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPost = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength10]} name={'addNewPost'}\r\n                       placeholder={'Enter your message'}/>\r\n            </div>\r\n            <div className={s.buttons}>\r\n                <button>Add post</button>\r\n                <button>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostRedux = reduxForm({form: 'addNewPost'})(AddNewPost)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElement = props.profilePage.postsData.map(p => <Post message={p.post}\r\n                                                                  likesCounter={p.likes}/>);\r\n\r\n    let sendNewPost = (values) => {\r\n        props.addPost(values.addNewPost)\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPostWrapp}>\r\n            <div className={s.posts}>\r\n                My posts\r\n            </div>\r\n            <div className={s.newPost}>\r\n                New posts\r\n            </div>\r\n            <AddNewPostRedux onSubmit={sendNewPost}/>\r\n            {postsElement}\r\n            <div className={s.item}>\r\n                Post 2\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            profilePage: state.profilePage,\r\n            newPostText: state.profilePage.newPostText\r\n        }\r\n    )\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n        addPost: (newPostMessage) => dispatch(addPostActionCreator(newPostMessage))\r\n    })\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"../Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateUserStatus={this.props.updateUserStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),withRouter)(ProfileContainer)"],"sourceRoot":""}