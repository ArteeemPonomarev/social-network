{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","item","activeClassName","activeLink","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogElements","dialogsPage","dialogsData","map","d","key","messageElement","messagesData","m","isAuth","dialogs","dialogItems","messages","values","sendMessage","newMessageBody","compose","connect","state","dispatch","sendMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,WAAa,4BAA4B,SAAW,0BAA0B,KAAO,wB,+FCctKC,EAXI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAaC,IAAEC,MAChB,kBAAC,IAAD,CAASC,gBAAmBF,IAAEG,WAAYC,GAAMP,GAAOD,EAAMS,QCA1DC,EANC,SAACV,GACb,OACA,yBAAKG,UAAWC,IAAEO,SAAUX,EAAMW,U,yCCIhCC,EAAcC,YAAiB,IA8C/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACf,GACpB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAM,iBAAkBe,YAAa,wBAExG,6BACI,qDAQDC,EA9CC,SAACzB,GAEb,IAAI0B,EAAiB1B,EAAM2B,YAAYC,YAAYC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KACRP,GAAI4B,EAAE5B,GACN6B,IAAKD,EAAE5B,QAE3E8B,EAAiBhC,EAAM2B,YAAYM,aAAaJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QACXoB,IAAKG,EAAEhC,QAO7E,OAAKF,EAAMmC,OAKP,yBAAKhC,UAAWC,IAAEgC,SACd,yBAAKjC,UAAWC,IAAEiC,aACbX,GAEL,yBAAKvB,UAAWC,IAAEkC,UACd,6BAAMN,IAEV,kBAAClB,EAAD,CAAqBG,SAhBT,SAACsB,GACjBvC,EAAMwC,YAAYD,EAAOE,oBAIlB,kBAAC,IAAD,CAAUjC,GAAI,Y,sBCAdkC,4BAAQC,aAnBD,SAACC,GACnB,MACI,CACIjB,YAAaiB,EAAMjB,gBAKN,SAACkB,GACtB,MACI,CACIL,YAAa,SAACC,GACVI,EAASC,YAAyBL,SAOmBM,IAAtDL,CAAwEjB","file":"static/js/4.6bda3067.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__6P9nW\",\"dialogItems\":\"Dialogs_dialogItems__2JJRr\",\"activeLink\":\"Dialogs_activeLink__33IRI\",\"messages\":\"Dialogs_messages__1OCb6\",\"item\":\"Dialogs_item__oJ7CO\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return(\r\n        <div className = {s.item}>\r\n            <NavLink activeClassName = {s.activeLink} to = {path}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return(\r\n    <div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogElements = props.dialogsPage.dialogsData.map(d => <DialogItem name={d.name}\r\n                                                                            id={d.id}\r\n                                                                            key={d.id}/>);\r\n\r\n    let messageElement = props.dialogsPage.messagesData.map(m => <Message message={m.message}\r\n                                                                          key={m.id}/>);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElement}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name={'newMessageBody'} placeholder={'Enter your message'}/>\r\n            </div>\r\n            <div>\r\n                <button>Send Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {sendMessageActionCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            dialogsPage: state.dialogsPage,\r\n        }\r\n    )\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return (\r\n        {\r\n            sendMessage: (newMessageBody) => {\r\n                dispatch(sendMessageActionCreator(newMessageBody));\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n"],"sourceRoot":""}